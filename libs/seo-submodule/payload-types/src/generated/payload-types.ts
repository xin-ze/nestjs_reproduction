/* eslint-disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `nx run payload-types:ts-codegen` to regenerate this file.
 */

export type SocialMedias = {
  platform: string | SocialMediaPlatform;
  link: string;
  id?: string;
}[];
export type ResponsiveSectionStyles = {
  breakpoint?: 'xs' | 'md';
  visible?: boolean;
  variant?: string;
  fullWidth?: boolean;
  withContainer?: boolean;
  centered?: boolean;
  borderTop?: boolean;
  borderBottom?: boolean;
  overflowHidden?: boolean;
  paddingTop?: string;
  paddingBottom?: string;
  paddingLeft?: string;
  paddingRight?: string;
  backgroundColor?: string;
  gap?: string;
  borderRadius?: string;
  id?: string;
}[];
export type CostRatingFactorTocItems = {
  name?: string;
  icon?: string | Media;
  link?: string;
  id?: string;
}[];
export type DynamicComponentBulletPoints = {
  text?: string;
  id?: string;
}[];
export type DynamicComponentHighlightStats = {
  title: string;
  subTitle: string;
  id?: string;
}[];
export type DynamicComponentCarrierReviews = {
  reviewTitle: string;
  reviewContent: string;
  firstName: string;
  carrierRating?: number;
  createdAt: string;
  id?: string;
}[];
export type TableColumnWidths = {
  column?: number;
  id?: string;
}[];
export type CostRatingFactorSummaryBlockPoints = {
  type?: 'allowed' | 'prohibited';
  content?: PayloadRichText;
  id?: string;
}[];
export type DynamicTextFilters = {
  conditionField:
    | 'state'
    | 'carrier'
    | 'coverageType'
    | 'carMake'
    | 'ageGroups'
    | 'hasViolations'
    | 'hasClaims'
    | 'isOnlyYoung'
    | 'isOnlyNotYoung'
    | 'isUnder18'
    | 'isNear35'
    | 'hasInfractions'
    | 'isAgeOver30'
    | 'isAgeOver60'
    | 'isSavingOver200'
    | 'carYear'
    | 'zip'
    | 'monthly';
  state: string | State;
  city?: string | City;
  carrier?: string | Carrier;
  coverageType?: 'Basic' | 'Preferred';
  carMake: string | CarMake;
  carModel?: string | CarModel;
  ageGroups?: '18_20' | '21_24' | '25_34' | '35_44' | '45_54' | '55_64' | 'over65';
  hasViolations?: 'Yes' | 'No';
  hasClaims?: 'Yes' | 'No';
  isOnlyYoung?: 'Yes' | 'No';
  isOnlyNotYoung?: 'Yes' | 'No';
  isUnder18?: 'Yes' | 'No';
  isNear35?: 'Yes' | 'No';
  hasInfractions?: 'Yes' | 'No';
  isAgeOver30?: 'Yes' | 'No';
  isAgeOver60?: 'Yes' | 'No';
  isSavingOver200?: 'Yes' | 'No';
  carYear?: string;
  zip?: string;
  monthly?: boolean;
  id?: string;
}[];
export type DynamicTableDimensions = {
  dimensionField?:
    | 'age'
    | 'ageGroups'
    | 'state'
    | 'city'
    | 'zip'
    | 'carrier'
    | 'carMake'
    | 'carModel'
    | 'carYear'
    | 'gender'
    | 'infractionType'
    | 'coverageType';
  label?: string;
  id?: string;
}[];
export type DynamicTableDataLabels = {
  name?:
    | 'age'
    | 'ageGroups'
    | 'state'
    | 'city'
    | 'zip'
    | 'carrier'
    | 'carMake'
    | 'carModel'
    | 'gender'
    | 'violationType'
    | 'coverageType'
    | 'National Average';
  age?: number;
  ageGroups?: '18_20' | '21_24' | '25_34' | '35_44' | '45_54' | '55_64' | 'over65';
  state: string | State;
  city?: string | City;
  zip?: string;
  carrier?: string | Carrier;
  carMake: string | CarMake;
  carModel?: string | CarModel;
  gender?: 'Male' | 'Female' | 'Non-binary';
  violationType?:
    | 'Careless Driving'
    | 'Cell Phone'
    | 'Defective Equipment'
    | 'Driving on Sus. License'
    | 'DUI'
    | 'Eluding Police'
    | 'Failure to Obey Traffic Sign'
    | 'Homicide'
    | 'Illegal Turn'
    | 'Improper Passing'
    | 'Leaving scene of an Accident/Hit and Run'
    | 'Motorcycle Violation'
    | 'Open Container'
    | 'Other'
    | 'Passing School Bus'
    | 'Racing/Drag Racing'
    | 'Reckless Driving'
    | 'Seat Belt'
    | 'Speeding over 15'
    | 'Speeding under 15'
    | 'Suspension'
    | 'Vehicle Theft'
    | 'Wrong Way/Wrong Lane';
  coverageType?: 'Basic' | 'Preferred';
  label?: string;
  value?: string;
  id?: string;
}[];
export type DynamicTableMeasures = {
  measureByVariant: MeasureByVariant;
  label?: string;
  id?: string;
}[];
export type DynamicTableFilters = {
  conditionField:
    | 'state'
    | 'carrier'
    | 'coverageType'
    | 'carMake'
    | 'ageGroups'
    | 'hasViolations'
    | 'hasClaims'
    | 'hasInfractions'
    | 'age'
    | 'isSavingOver200'
    | 'carYear'
    | 'zip'
    | 'monthlyPremiumLabel';
  state: string | State;
  city?: string | City;
  carrier?: string | Carrier;
  coverageType?: 'Basic' | 'Preferred';
  carMake: string | CarMake;
  carModel?: string | CarModel;
  ageGroups?: '18_20' | '21_24' | '25_34' | '35_44' | '45_54' | '55_64' | 'over65';
  hasViolations?: 'Yes' | 'No';
  hasClaims?: 'Yes' | 'No';
  hasInfractions?: 'Yes' | 'No';
  operator?: 'equals' | 'notEquals' | 'gt' | 'gte' | 'lt' | 'lte';
  age?: number;
  isSavingOver200?: 'Yes' | 'No';
  carYear?: string;
  zip?: string;
  monthlyPremiumLabel?: string;
  id?: string;
}[];
export type DynamicTableOrders = {
  orderByVariant?: OrderByVariant;
  order?: 'asc' | 'desc';
  id?: string;
}[];
export type DynamicRealQuotesTableListFilter = {
  conditionField: 'carYearRange';
  state: string | State;
  city?: string | City;
  carMake: string | CarMake;
  carModel?: string | CarModel;
  carYear?: number;
  isFullCoverage?: boolean;
  isStateMinimum?: boolean;
  ageGroups?: '18_20' | '21_24' | '25_34' | '35_44' | '45_54' | '55_64' | 'over65';
  age?: number;
  violationType?:
    | 'Careless Driving'
    | 'Cell Phone'
    | 'Defective Equipment'
    | 'Driving on Sus. License'
    | 'DUI'
    | 'Eluding Police'
    | 'Failure to Obey Traffic Sign'
    | 'Homicide'
    | 'Illegal Turn'
    | 'Improper Passing'
    | 'Leaving scene of an Accident/Hit and Run'
    | 'Motorcycle Violation'
    | 'Open Container'
    | 'Other'
    | 'Passing School Bus'
    | 'Racing/Drag Racing'
    | 'Reckless Driving'
    | 'Seat Belt'
    | 'Speeding over 15'
    | 'Speeding under 15'
    | 'Suspension'
    | 'Vehicle Theft'
    | 'Wrong Way/Wrong Lane';
  speeding?: 'Speeding 1-5' | 'Speeding 6-10' | 'Speeding 11-15' | 'Speeding 16-20' | 'Speeding 21+';
  creditBracket?: 'MoreThan750' | 'Between660and750' | 'Between550and659' | 'LessThan550';
  currentlyInsured?: boolean;
  accidentType?: 'At Fault With No Injury' | 'At Fault With Injury' | 'Not At Fault';
  isYoungDriver?: boolean;
  isSeniorDriver?: boolean;
  onlyAvailableCities?: boolean;
  operator?: 'equals' | 'notEquals' | 'gt' | 'gte' | 'lt' | 'lte';
  carYearCompare?: number;
  priceCompareOperator?: 'equals' | 'notEquals' | 'gt' | 'gte' | 'lt' | 'lte';
  priceCompare?: number;
  biLimit?: 'State Minimum' | '15/30' | '25/50' | '30/60' | '50/100' | '100/300' | '250/500';
  deduplicateCarBaseModel?: boolean;
  minCarYear?: number;
  maxCarYear?: number;
  id?: string;
}[];
export type DynamicRealQuotesTableHighlightFields = {
  highlightField?: 'age' | 'violation' | 'car' | 'currentlyInsured' | 'coverage';
  id?: string;
}[];
export type DynamicRealQuotesTableDisplayColumns = {
  displayColumnField?:
    | 'stateAndCity'
    | 'carMakeAndModel'
    | 'carrier'
    | 'date'
    | 'creditBracket'
    | 'nameAndAge'
    | 'violationType'
    | 'violationDescription'
    | 'accidentType'
    | 'currentlyInsured'
    | 'biLimitAndCoverageType'
    | 'biLimit'
    | 'soldMonthlyPremium'
    | 'carrierAndQuotedDate'
    | 'nameAndAgeAndStateAndCity'
    | 'carYearMakeAndModel'
    | 'nameAndAgeAndZip';
  label?: string;
  useJerryPink?: boolean;
  id?: string;
}[];
export type DynamicRealQuotesTableFilter = {
  conditionField:
    | 'state'
    | 'carMake'
    | 'carYear'
    | 'isFullCoverage'
    | 'isStateMinimum'
    | 'ageGroups'
    | 'age'
    | 'violationType'
    | 'speeding'
    | 'creditBracket'
    | 'currentlyInsured'
    | 'accidentType'
    | 'isYoungDriver'
    | 'isSeniorDriver'
    | 'onlyAvailableCities'
    | 'carYearCompare'
    | 'priceCompare'
    | 'biLimit'
    | 'deduplicateCarBaseModel'
    | 'carYearRange';
  state: string | State;
  city?: string | City;
  carMake: string | CarMake;
  carModel?: string | CarModel;
  carYear?: number;
  isFullCoverage?: boolean;
  isStateMinimum?: boolean;
  ageGroups?: '18_20' | '21_24' | '25_34' | '35_44' | '45_54' | '55_64' | 'over65';
  age?: number;
  violationType?:
    | 'Careless Driving'
    | 'Cell Phone'
    | 'Defective Equipment'
    | 'Driving on Sus. License'
    | 'DUI'
    | 'Eluding Police'
    | 'Failure to Obey Traffic Sign'
    | 'Homicide'
    | 'Illegal Turn'
    | 'Improper Passing'
    | 'Leaving scene of an Accident/Hit and Run'
    | 'Motorcycle Violation'
    | 'Open Container'
    | 'Other'
    | 'Passing School Bus'
    | 'Racing/Drag Racing'
    | 'Reckless Driving'
    | 'Seat Belt'
    | 'Speeding over 15'
    | 'Speeding under 15'
    | 'Suspension'
    | 'Vehicle Theft'
    | 'Wrong Way/Wrong Lane';
  speeding?: 'Speeding 1-5' | 'Speeding 6-10' | 'Speeding 11-15' | 'Speeding 16-20' | 'Speeding 21+';
  creditBracket?: 'MoreThan750' | 'Between660and750' | 'Between550and659' | 'LessThan550';
  currentlyInsured?: boolean;
  accidentType?: 'At Fault With No Injury' | 'At Fault With Injury' | 'Not At Fault';
  isYoungDriver?: boolean;
  isSeniorDriver?: boolean;
  onlyAvailableCities?: boolean;
  operator?: 'equals' | 'notEquals' | 'gt' | 'gte' | 'lt' | 'lte';
  carYearCompare?: number;
  priceCompareOperator?: 'equals' | 'notEquals' | 'gt' | 'gte' | 'lt' | 'lte';
  priceCompare?: number;
  biLimit?: 'State Minimum' | '15/30' | '25/50' | '30/60' | '50/100' | '100/300' | '250/500';
  deduplicateCarBaseModel?: boolean;
  minCarYear?: number;
  maxCarYear?: number;
  id?: string;
}[];
export type DynamicRealQuotesTableFilterGroups = {
  filter?: DynamicRealQuotesTableFilter;
  rowsCount?: number;
  id?: string;
}[];
export type DynamicRealQuotesTablePreferConditions = {
  filter?: DynamicRealQuotesTableFilter;
  rowsCount?: number;
  id?: string;
}[];
export type CarrierReviewsTableDisplayColumns = {
  displayColumnField?: 'carrier' | 'date' | 'reviewContentAndName' | 'stateAndCity' | 'rating';
  label?: string;
  useJerryPink?: boolean;
  id?: string;
}[];
export type CarrierReviewsTableFilter = {
  conditionField: 'state';
  state: string | State;
  city?: string | City;
  id?: string;
}[];
export type TableDisplayColumns = {
  displayColumnField?:
    | 'fairCostEstimate'
    | 'makeAndBaseModel'
    | 'nameAndAgeAndStateAndCity'
    | 'quoteDate'
    | 'partsCost'
    | 'laborCost'
    | 'laborTime'
    | 'makeAndBaseModelAndSubModel';
  label?: string;
  useJerryPink?: boolean;
  id?: string;
}[];
export type AverageInsuranceTableDynamicFilter = {
  conditionField: 'state' | 'carrier';
  state: string | State;
  city?: string | City;
  carrier: string | Carrier;
  id?: string;
}[];
export type CarRepairQuoteCostTableDynamicFilter = {
  conditionField: 'carRepairService' | 'state' | 'carMake';
  carRepairService: string | CarRepairService;
  state: string | State;
  city?: string | City;
  carMake: string | CarMake;
  carModel?: string | CarModel;
  id?: string;
}[];
export type CategorySections = {
  name?: string;
  category: string | Category;
  description?: string;
  icon?: string | Media;
  articles?: string[] | Article[];
  id?: string;
}[];
export type QuestionSectionRawArticles = {
  slug?: string;
  cover?: string | Media;
  title?: string;
  content?: string;
  author?: string | Author;
  id?: string;
}[];
export type EditorialStandardsPagesKeyPrinciples = {
  icon?: string | Media;
  title?: string;
  desc?: string;
  id?: string;
}[];
export type EditorialStandardsPagesCiters = {
  icon?: string | Media;
  link?: string;
  id?: string;
}[];

import { PayloadRichText } from './PayloadRichText';
export interface Config {
  collections: {
    articles: Article;
    'age-detail-pages': AgeDetailPage;
    'landing-topic-pages': LandingTopicPage;
    'seo-resource-template-pages': SeoResourceTemplatePage;
    'car-repair-service-template-pages': CarRepairServiceTemplatePage;
    'carrier-template-pages': CarrierTemplatePage;
    'news-reports': NewsReport;
    'car-repair-services': CarRepairService;
    'car-repair-service-detail-pages': CarRepairServiceDetailPage;
    'car-repair-service-city-pages': CarRepairServiceCityPage;
    'car-repair-service-categories': CarRepairServiceCategory;
    authors: Author;
    'team-members': TeamMember;
    'user-comments': UserComment;
    categories: Category;
    tags: Tag;
    qnas: Qna;
    'car-makes': CarMake;
    'car-models': CarModel;
    'car-model-trims': CarModelTrim;
    'car-model-years': CarModelYear;
    carriers: Carrier;
    states: State;
    cities: City;
    'carrier-reviews': CarrierReview;
    buttons: Button;
    cards: Card;
    faqs: Faq;
    'faq-lists': FaqList;
    'hero-ctas': HeroCta;
    'highlight-sections': HighlightSection;
    links: Link;
    tables: Table;
    'top-navigations': TopNavigation;
    seos: Seo;
    'seo-card-lists': SeoCardList;
    'seo-page-schemas': SeoPageSchema;
    'context-fields': ContextField;
    'dynamic-components': DynamicComponent;
    'dynamic-texts': DynamicText;
    'dynamic-tables': DynamicTable;
    'dynamic-real-quotes-tables': DynamicRealQuotesTable;
    'carrier-reviews-tables': CarrierReviewsTable;
    'static-components': StaticComponent;
    'average-insurance-tables': AverageInsuranceTable;
    'car-repair-quote-cost-tables': CarRepairQuoteCostTable;
    'used-car-detail-card': UsedCarDetailCard;
    'used-car-generated-description-card': UsedCarGeneratedDescriptionCard;
    media: Media;
    videos: Video;
    'twitter-widgets': TwitterWidget;
    'social-media-platforms': SocialMediaPlatform;
    'global-events': GlobalEvent;
    'internal-tags': InternalTag;
    'scheduled-publish-tasks': ScheduledPublishTask;
    users: User;
    redirects: Redirect;
  };
  globals: {
    'newsroom-landing-page': NewsroomLandingPage;
    'data-and-studies-page': DataAndStudiesPage;
    'car-repair-service-city-template': CarRepairServiceCityTemplate;
    'advice-landing-page': AdviceLandingPage;
    'auto-refi-landing-page': AutoRefiLandingPage;
    'lender-landing-page': LenderLandingPage;
    'editorial-standards-page': EditorialStandardsPage;
    'garage-guard-page': GarageGuardPage;
    'home-page': HomePage;
    'reviewers-board-page': ReviewersBoardPage;
    'safety-page': SafetyPage;
    'driving-rewards-page': DrivingRewardsPage;
    'faq-page': FaqPage;
    'team-page': TeamPage;
    'privacy-policy-page': PrivacyPolicyPage;
    'used-car-transaction': UsedCarTransaction;
  };
}
export interface Article {
  id: string;
  publishDate: string;
  isScheduledPublish?: boolean;
  relatedArticles?:
    | {
        value: string;
        relationTo: 'articles';
      }[]
    | {
        value: Article;
        relationTo: 'articles';
      }[];
  category: string | Category;
  slug: string;
  title: string;
  description: string;
  cover: string | Media;
  variant?: 'contentFocused' | 'article' | 'articleSecondary' | 'news' | 'newsSecondary';
  content: (
    | HeroCtaBlock
    | LogoListBlock
    | AuthorInfoLineBlock
    | AppScreenshotBlock
    | RichTextBlock
    | UserCommentListBlock
    | CardListBlock
    | CostRatingFactorTocBlock
    | VideoBlock
    | FaqListBlock
    | DynamicComponentBlock
    | StaticComponentBlock
    | EditorialNoteBlock
    | ExpertQuoteBoxBlock
    | DividerBlock
    | CostRatingFactorSummaryBlock
    | AuthorListBlock
    | UserCommentCtaBlock
    | WhyTrustJerryBlock
    | ProsAndConsCardsBlock
    | ProAndConBlock
    | ListWithIconBlock
    | TableOfContentsBlock
    | JumpToElementBlock
    | CarrierReviewCardListBlock
    | CarrierReviewListBlock
    | CarrierVsCarrierRatingBlock
  )[];
  author: string | Author;
  editor?: string | Author;
  reviewer?: string | Author;
  faqList?: string | FaqList;
  tags?: string[] | Tag[];
  showToc?: boolean;
  disableReviewerLink?: boolean;
  contentSectionVariant?: 'default' | 'compact' | 'contentFocused' | 'blockControlWidth';
  showStickyTOC?: boolean;
  mobileStickyTOCVariant?: 'mobileV2';
  contentHeadingAlign?: 'left' | 'center';
  responsiveFontSize?: boolean;
  containerWidth?: ResponsiveContainerWidth;
  contentMaxWidth?: number;
  navigationBarVariant?: 'primary' | 'secondary';
  navigationBarNoShadow?: boolean;
  showHeroCta?: boolean;
  heroCtaProps?: HeroCtaProps;
  ctaWidget?: string | StaticComponent;
  showWhyTrustJerry?: boolean;
  whyTrustJerryContent?: string;
  showFooter?: boolean;
  showEditorialNote?: boolean;
  footerVariant?: 'default' | 'card';
  hideSignUpBanner?: boolean;
  useDarkCtaWidget?: boolean;
  seo?: string | Seo;
  noPage?: boolean;
  noCard?: boolean;
  noIndex?: boolean;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
  _status?: 'draft' | 'published';
}
export interface Category {
  id: string;
  name: string;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface User {
  id: string;
  name: string;
  roles: ('admin' | 'editor' | 'developer' | 'translator' | 'user')[];
  defaultAuthor?: string | Author;
  defaultEditor?: string | Author;
  defaultReviewer?: string | Author;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
  enableAPIKey?: boolean;
  apiKey?: string;
  apiKeyIndex?: string;
  email: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  salt?: string;
  hash?: string;
  loginAttempts?: number;
  lockUntil?: string;
  password?: string;
}
export interface Author {
  id: string;
  name: string;
  title?: string;
  avatar?: string | Media;
  bioSummary?: string;
  bio?: string;
  bioRichText?: PayloadRichText;
  roles?: ('writer' | 'editor' | 'reviewer')[];
  socialMedias?: SocialMedias;
  education?: PayloadRichText;
  expertise?: PayloadRichText;
  certifications?: PayloadRichText;
  yearOfExperience?: number;
  workHistory?: PayloadRichText;
  highlightPoints?: PayloadRichText;
  showInList?: boolean;
  seoSchema?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface Media {
  id: string;
  alt: string;
  tags?: string[] | InternalTag[];
  slug: string;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
}
export interface InternalTag {
  name: string;
  id: string;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface SocialMediaPlatform {
  id: string;
  slug: string;
  name: string;
  logo: string | Media;
  hoverLogo: string | Media;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface HeroCtaBlock {
  heroCta?: string | HeroCta;
  styleCustomized?: boolean;
  responsive?: boolean;
  sectionStyle?: SectionStyle;
  sectionStyles?: ResponsiveSectionStyles;
  id?: string;
  blockName?: string;
  blockType: 'hero-cta-block';
}
export interface HeroCta {
  id: string;
  name: string;
  variant: 'default' | 'beforeVsAfterJerry' | 'compareCarriers' | 'carRepairService' | 'defaultArticleHeader';
  title?: PayloadRichText;
  subtitle?: PayloadRichText;
  ctaButton?: PayloadRichText;
  hideCtaButton?: boolean;
  ctaLink?: string;
  ratingDesc?: PayloadRichText;
  hideRating?: boolean;
  ctaImage?: string | Media;
  horizontalCtaImagePadding?: number;
  verticalCtaImagePadding?: number;
  backgroundImage?: string | Media;
  description?: PayloadRichText;
  costBeforeJerry?: number;
  costAfterJerry?: number;
  trustPoints?: PayloadRichText;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface SectionStyle {
  visible?: boolean;
  variant?: string;
  fullWidth?: boolean;
  withContainer?: boolean;
  centered?: boolean;
  borderTop?: boolean;
  borderBottom?: boolean;
  overflowHidden?: boolean;
  paddingTop?: string;
  paddingBottom?: string;
  paddingLeft?: string;
  paddingRight?: string;
  backgroundColor?: string;
  gap?: string;
  borderRadius?: string;
}
export interface LogoListBlock {
  title?: PayloadRichText;
  maskOpacity?: number;
  logoHeight?: string;
  logoWidth?: ResponsiveLogoWidth;
  type?: 'carriers' | 'medias';
  featuredCarriers?: string[] | Carrier[];
  featuredMedias?: string[] | Media[];
  styleCustomized?: boolean;
  responsive?: boolean;
  sectionStyle?: SectionStyle;
  sectionStyles?: ResponsiveSectionStyles;
  id?: string;
  blockName?: string;
  blockType: 'logo-list-block';
}
export interface ResponsiveLogoWidth {
  xs?: string;
  md?: string;
}
export interface Carrier {
  id: string;
  name: string;
  avatar?: string | Media;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface AuthorInfoLineBlock {
  footer?: PayloadRichText;
  styleCustomized?: boolean;
  responsive?: boolean;
  sectionStyle?: SectionStyle;
  sectionStyles?: ResponsiveSectionStyles;
  id?: string;
  blockName?: string;
  blockType: 'author-info-line-block';
}
export interface AppScreenshotBlock {
  appScreenshotVariant: 'variant1' | 'variant2' | 'variant3';
  appscreenshot?: string | Media;
  listForVariant1?: {
    label?: PayloadRichText;
    description?: PayloadRichText;
    icon?: string | Media;
    id?: string;
  }[];
  pinkText?: PayloadRichText;
  title?: PayloadRichText;
  subtitle?: PayloadRichText;
  listForVariant2?: {
    label?: PayloadRichText;
    id?: string;
  }[];
  listForVariant3?: {
    title?: PayloadRichText;
    appscreenshot?: string | Media;
    id?: string;
  }[];
  styleCustomized?: boolean;
  responsive?: boolean;
  sectionStyle?: SectionStyle;
  sectionStyles?: ResponsiveSectionStyles;
  id?: string;
  blockName?: string;
  blockType: 'app-screenshot-block';
}
export interface RichTextBlock {
  content?: PayloadRichText;
  showReadMore?: boolean;
  styleCustomized?: boolean;
  responsive?: boolean;
  sectionStyle?: SectionStyle;
  sectionStyles?: ResponsiveSectionStyles;
  id?: string;
  blockName?: string;
  blockType: 'rich-text-block';
}
export interface UserCommentListBlock {
  title?: PayloadRichText;
  description?: PayloadRichText;
  variant?: 'default' | 'current';
  userComments?: string[] | UserComment[];
  ctaButtonText?: PayloadRichText;
  ctaButtonHref?: string;
  styleCustomized?: boolean;
  responsive?: boolean;
  sectionStyle?: SectionStyle;
  sectionStyles?: ResponsiveSectionStyles;
  id?: string;
  blockName?: string;
  blockType: 'user-comment-list-block';
}
export interface UserComment {
  id: string;
  name: string;
  content?: string;
  avatar?: string | Media;
  desc: string;
  ratings?: number;
  reviewDate?: string;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface CardListBlock {
  title?: PayloadRichText;
  subtitle?: PayloadRichText;
  description?: PayloadRichText;
  topImage?: string | Media;
  cardList: string | SeoCardList;
  styleCustomized?: boolean;
  responsive?: boolean;
  sectionStyle?: SectionStyle;
  sectionStyles?: ResponsiveSectionStyles;
  id?: string;
  blockName?: string;
  blockType: 'card-list-block';
}
export interface SeoCardList {
  id: string;
  title: string;
  cards: string[] | Card[];
  scrollVariant?: 'arrows' | 'dots';
  layoutVariant?:
    | 'pc41mobile22'
    | 'pc41mobile14'
    | 'pc31mobile13'
    | 'pc22mobile14'
    | 'pc21mobile21'
    | 'pc12mobile12'
    | 'pc21mobile12'
    | 'pc11mobile11';
  cardListVariant?: 'default' | 'secondary';
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface Card {
  id: string;
  slug: string;
  variant?:
    | 'primary'
    | 'articleCard'
    | 'keyTakeaways'
    | 'iconElement'
    | 'explanationCard'
    | 'default'
    | 'locationCard'
    | 'locationCardSecondary'
    | 'infractionCard'
    | 'locationKeyTakeaways'
    | 'keyTakeawaysSecondary'
    | 'smallCarCard'
    | 'bigCarCard'
    | 'authorCard'
    | 'allCarCard'
    | 'carRepairCard'
    | 'dataLockCard'
    | 'blockCard'
    | 'allCarCardSecondary'
    | 'partsCostDiagram'
    | 'learnMoreTextCard'
    | 'learnMorePictureCard'
    | 'quickLook';
  title?: PayloadRichText;
  subtitle?: PayloadRichText;
  content?: PayloadRichText;
  topics?: {
    titleRichText?: PayloadRichText;
    contentRichText?: PayloadRichText;
    id?: string;
  }[];
  icon?: string | Media;
  iconShape?: 'rectangle' | 'circle';
  iconSize?: number;
  iconMargin?: number;
  cover?: string | Media;
  coverMinHeight?: number;
  coverMargin?: CoverMargin;
  coverProps?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  details?: PayloadRichText;
  defaultShowDetails?: boolean;
  viewDetailsText?: string;
  hideDetailsText?: string;
  viewDetailsMarginTop?: number;
  footer?: PayloadRichText;
  extra?: PayloadRichText;
  readMore?: string;
  article?: string | Article;
  link?: string;
  linkPosition?: 'readMore' | 'card' | 'title';
  clickEvents?: string[] | GlobalEvent[];
  orientation?: 'horizontal' | 'vertical' | 'horizontalReverse' | 'verticalReverse';
  cardMainPadding?: number;
  withShadow?: boolean;
  withBorder?: boolean;
  withPadding?: boolean;
  borderRadius?: number;
  serialNumber?: string;
  outerPaddingTop?: string;
  outerPaddingBottom?: string;
  display?: 'flex' | 'grid' | 'none';
  gridTemplate?: string;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface CoverMargin {
  marginTop?: string;
  marginBottom?: string;
  marginLeft?: string;
  marginRight?: string;
}
export interface GlobalEvent {
  id: string;
  name: string;
  description?: string;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface CostRatingFactorTocBlock {
  title?: PayloadRichText;
  costRatingFactors?: CostRatingFactorTocItems;
  styleCustomized?: boolean;
  responsive?: boolean;
  sectionStyle?: SectionStyle;
  sectionStyles?: ResponsiveSectionStyles;
  id?: string;
  blockName?: string;
  blockType: 'cost-rating-factor-toc-block';
}
export interface VideoBlock {
  title?: PayloadRichText;
  video: string | Video;
  videoBlockVariant?: 'default' | 'secondary';
  styleCustomized?: boolean;
  responsive?: boolean;
  sectionStyle?: SectionStyle;
  sectionStyles?: ResponsiveSectionStyles;
  id?: string;
  blockName?: string;
  blockType: 'video-block';
}
export interface Video {
  id: string;
  name: string;
  url: string;
  cover?: string | Media;
  desktopCover?: string | Media;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface FaqListBlock {
  title?: PayloadRichText;
  faqs: string[] | Faq[];
  styleCustomized?: boolean;
  responsive?: boolean;
  sectionStyle?: SectionStyle;
  sectionStyles?: ResponsiveSectionStyles;
  id?: string;
  blockName?: string;
  blockType: 'faq-list-block';
}
export interface Faq {
  id: string;
  name: string;
  question?: string;
  title: PayloadRichText;
  answer: PayloadRichText;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface DynamicComponentBlock {
  dynamicComponent: string | DynamicComponent;
  styleCustomized?: boolean;
  responsive?: boolean;
  sectionStyle?: SectionStyle;
  sectionStyles?: ResponsiveSectionStyles;
  id?: string;
  blockName?: string;
  blockType: 'dynamic-component-block';
}
export interface DynamicComponent {
  id: string;
  slug: string;
  name: string;
  type:
    | 'CtaWidget23'
    | 'CarrierList'
    | 'BoxChartMinAndFullCoverageCostByState'
    | 'ButtonWidget'
    | 'LinkButton'
    | 'TableOfContents'
    | 'TableAgeBasedCostForState'
    | 'NearbyStatesList'
    | 'CarMakeModelYearsLinkList'
    | 'CarMakeOtherModelLinkList'
    | 'CarMakeOtherMakeLinkList'
    | 'CarRepairServiceMakeLinkList'
    | 'CarRepairServiceRandomServiceList'
    | 'InternalLinkList'
    | 'TableAgeBasedCostForCarrier'
    | 'TableCarLoanAprForLoanTerm'
    | 'TableStateTierCheapestCarriers'
    | 'TableCarrierVsCarrierCostByCoverage'
    | 'TableRealQuotesForCarrier'
    | 'TableStateCheapestCarInsuranceByCity'
    | 'TableCostForSelectedState'
    | 'TableCarrierVsCarrierCostByAgeGroups'
    | 'TableCostAndSavingForCarrierByAge'
    | 'TableCarrierVsCarrierCostByInfractions'
    | 'RandomCitiesInStateList'
    | 'TableFilteredCarriersForCity'
    | 'TableCostOfBasicAndPreferredForCarrier'
    | 'TableCostAndSavingForCarrierByState'
    | 'TableCityCost'
    | 'TableCityCostForInfraction'
    | 'TableCityCostForAgeUnder25'
    | 'TableCostAndSavingForCarrierByInfraction'
    | 'TableCarRealQuotesForCarModel'
    | 'TableCityZipRealQuote'
    | 'TableStateBestCarriersStatic'
    | 'TableCityCarriersForInfraction'
    | 'TableCarInsuranceCostsForYear'
    | 'TableCarBestCarriers'
    | 'TableCarMakeBestCarriersStatic'
    | 'TableCityCostForAgeAbove25'
    | 'TableCityRealQuote'
    | 'BarChartInfractionAgeCostByCarMake'
    | 'TableCarModels'
    | 'TableCarMakeCostWithCity'
    | 'TableCarMakeRealQuote'
    | 'TableCarMakeCostWithCarYear'
    | 'TableCityBestCarriers'
    | 'TableStateRealQuote'
    | 'TableStateCostGroupByCarrier'
    | 'TableAnnualAndMonthlyCostGroupByCarrier'
    | 'TableStateCostGroupByCarrierAgeUnder25'
    | 'TableStateCostGroupByCarrierAgeOver65'
    | 'TableStateFullCoverageCostGroupByCarrierAndCredit'
    | 'TableStateMiniCoverageCostGroupByCarrierAndCredit'
    | 'TableStateFullCoverageCostGroupByCarrierAndViolation'
    | 'TableStateMiniCoverageCostGroupByCarrierAndViolation'
    | 'TableStateFullCoverageCostGroupByCarrierAndViolation2'
    | 'TableStateMiniCoverageCostGroupByCarrierAndViolation2'
    | 'TableStateTopPopularCarriers'
    | 'TableCarMakeSavings'
    | 'TableCarInsuranceCostsForCarModel'
    | 'TableStateCostForCarMakeModel'
    | 'BarChartAgeDrivingRecordCostByState'
    | 'TableCarLoanAprForCreditRating'
    | 'TableStateAndNationalSavings'
    | 'TableCarInsuranceCosts'
    | 'TableStateBestCarriers'
    | 'TableStateCostWithCity'
    | 'TableStateTopRatedCarriers'
    | 'TableStateCost'
    | 'TableStateCheapestCarInsurance'
    | 'TableStateCostForInfraction'
    | 'AuthorInfoCard'
    | 'TableStateCostForAge'
    | 'RideWithUsCta'
    | 'AllCheapStateList'
    | 'CtaWidget22'
    | 'BarChartMinVsFullCoverage'
    | 'PieChartLiabilityCollisionComprehensive'
    | 'CarrierReviewResultList'
    | 'TrustBuildingCardList'
    | 'BarChartCompareSimilarElements'
    | 'TableTierCarriersForCar'
    | 'CtfIndexedCards'
    | 'RandomCarModelsLinkList'
    | 'TableCarModelCostForInfraction'
    | 'TableAgeBasedCostForGender'
    | 'TableAgeBasedCostForInfraction'
    | 'TableAgeBasedCostForMake'
    | 'TableAgeBasedCostForModel'
    | 'TableAgeBasedCoverageVsAllUser'
    | 'TableCarInsuranceCostsForCarModel5Year'
    | 'InsuranceCostAcrossStatesMap'
    | 'InsuranceCostByCreditRangePieChart'
    | 'BarChartCompareSimilarElementsMonthly'
    | 'BarChartAgeGroup'
    | 'PieChartAgeDemographic'
    | 'TableCostByInfractionOfCarrier'
    | 'TableByFinanceGroupForApr'
    | 'TableByLoanByAgeGroupForApr'
    | 'TableRealFundedRefiOffers'
    | 'BarChartByAgeForCarLoan'
    | 'PieChartByCreditTierForApr'
    | 'AprAcrossStatesMap'
    | 'TableCarTierCarriers'
    | 'CarrierProsAndReviews'
    | 'CarrierVsCarrierReviewResultList'
    | 'TableRatingsForCarrierVsCarrier'
    | 'TableCostByDuiOfCarrierVsCarrier'
    | 'TableCostBySpeedingOfCarrierVsCarrier'
    | 'TableCostByAccidentOfCarrierVsCarrier'
    | 'TableCostByAgeForTeensOfCarrierVsCarrier'
    | 'TableCostByCreditOfCarrierVsCarrier'
    | 'TableCostMinVsFullOfCarrierVsCarrier'
    | 'TableCostByGenderForSeniorsOfCarrierVsCarrier'
    | 'BarChartByAgeForCarrierVsCarrier'
    | 'TableCostByStateForCarrierVsCarrier'
    | 'TableCostByMakeForCarrierVsCarrier'
    | 'WhyTrustJerry'
    | 'CarRepairServiceIntroduction'
    | 'CarRepairServiceDescription'
    | 'CarRepairServiceCostTableForCity'
    | 'Random10ModelsServiceCostForCity'
    | 'RandomOther10CitiesServiceCostForCity'
    | 'Random12CarRepairMakeLinkList'
    | 'Random6CarRealEstimateTable'
    | 'BottomCtaBanner'
    | 'Tag'
    | 'ExpertInsightBlock'
    | 'CustomCarrierReviewList'
    | 'CarrierInfoByReviewsOrTable';
  title?: PayloadRichText;
  subtitle?: PayloadRichText;
  content?: PayloadRichText;
  cta?: string;
  ctaHref?: string;
  state?: string | State;
  states?: string[] | State[];
  tableStyle?: TableStyle;
  coverageType?: 'Basic' | 'Preferred';
  notCreditRatings?: ('FAIR' | 'GOOD' | 'VERY_GOOD' | 'EXCELLENT')[];
  category?: string | Category;
  tier?: 'Popular' | 'Cheapest';
  carMake?: string | CarMake;
  carModel?: string | CarModel;
  city?: string | City;
  cities?: string[] | City[];
  carrier?: string | Carrier;
  carrier2?: string | Carrier;
  carriers?: string[] | Carrier[];
  format?: string;
  count?: number;
  age?: number;
  isOnlyYoung?: boolean;
  hasInfractions?: boolean;
  cheapState?: boolean;
  variant?: string;
  depth?: number;
  desc?: string;
  link?: string;
  carRepairService?: string | CarRepairService;
  bulletPoints?: DynamicComponentBulletPoints;
  hiddenInTopFirstScreen?: boolean;
  expert?: string | Author;
  expertSubtitle?: PayloadRichText;
  quote?: PayloadRichText;
  showRating?: boolean;
  rating?: number;
  highlightStats?: DynamicComponentHighlightStats;
  carrierInfoByReviewsOrTableVariant?: 'reviews' | 'table';
  carrireReviews?: DynamicComponentCarrierReviews;
  table?: string | Table;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface State {
  id: string;
  name: string;
  abbreviation: string;
  avatar?: string | Media;
  hasInsuranceData?: boolean;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface TableStyle {
  blocked?: 'head' | 'body' | 'table';
  scrollable?: boolean;
  whiteBody?: boolean;
  halfWidth?: boolean;
}
export interface CarMake {
  id: string;
  name: string;
  avatar?: string | Media;
  hasInsuranceData?: boolean;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface CarModel {
  id: string;
  carMake: string | CarMake;
  name: string;
  fullName: string;
  avatar?: string | Media;
  legacyCarModelName?: string;
  legacyCarModelSlug?: string;
  slug?: string;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface City {
  id: string;
  name: string;
  state: string | State;
  avatar?: string | Media;
  abbreviation?: string;
  hasInsuranceData?: boolean;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface CarRepairService {
  id: string;
  internalSlug?: string;
  name: string;
  anchorText?: string;
  introduction?: PayloadRichText;
  description?: PayloadRichText;
  shortDescription?: string;
  categories?: string[] | CarRepairServiceCategory[];
  author?: string | Author;
  showInList?: boolean;
  showInApp?: boolean;
  slugRefined?: boolean;
  cover?: string | Media;
  makePageTitle?: PayloadRichText;
  makePageSeoTitle?: PayloadRichText;
  modelPageTitle?: PayloadRichText;
  modelPageSeoTitle?: PayloadRichText;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface CarRepairServiceCategory {
  id: string;
  name: string;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface Table {
  id: string;
  title: string;
  table: PayloadRichText;
  widths?: TableColumnWidths;
  blocked?: 'head' | 'body' | 'table';
  scrollable?: boolean;
  whiteBody?: boolean;
  halfWidth?: boolean;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface StaticComponentBlock {
  staticComponent: string | StaticComponent;
  styleCustomized?: boolean;
  responsive?: boolean;
  sectionStyle?: SectionStyle;
  sectionStyles?: ResponsiveSectionStyles;
  id?: string;
  blockName?: string;
  blockType: 'static-component-block';
}
export interface StaticComponent {
  id: string;
  type:
    | 'CtaWidget17'
    | 'StateCityLinkList'
    | 'CarMakeModelLinkList'
    | 'CarMakeLinkList'
    | 'CarMakeCardList'
    | 'BarChartCostByAge'
    | 'TableCarLoanUsedAndNewCarApr'
    | 'TableCarrierCost'
    | 'TableCarLoanAprAndAvgPayment'
    | 'TableAgeBasedCostForYoung'
    | 'ArticlePageHeroCta'
    | 'TableRealQuoteFromSoldPolicy'
    | 'CtaWidget15'
    | 'CtaWidget16'
    | 'QuestionWidget'
    | 'CtaWidget14'
    | 'EasiestWayCta'
    | 'KnowYourDataSafeCta'
    | 'CtaWidget13'
    | 'CtaWidget9'
    | 'CtaWidget8'
    | 'TableTopRatedCheapCarriers'
    | 'CtaWidget11'
    | 'CtaWidget4'
    | 'CarInsuranceCalculator'
    | 'FaqWidget'
    | 'CtaWidget10'
    | 'CtaWidget1'
    | 'CtaWidget12'
    | 'CtaWidget3'
    | 'CtaWidget26'
    | 'CtaWidget27'
    | 'CtaWidget27Gray'
    | 'CtaWidget28Refi'
    | 'CtaWidget28Garage'
    | 'CtaWidget29'
    | 'CtaWidget30'
    | 'CtaWidget31'
    | 'CtaWidget32'
    | 'CtaWidget33'
    | 'CtaWidget33Publication'
    | 'CtaWidget34'
    | 'CtaWidget34Publication'
    | 'CtaWidget35'
    | 'CtaWidget35Publication'
    | 'CtaWidget24'
    | 'MonthlyPaymentCalculator'
    | 'ReviewBiCardCarousel'
    | 'TableCarModelCostForInfraction'
    | 'TableAgeBasedMonthlyCost'
    | 'CtaWidget21'
    | 'CtaWidget36'
    | 'CtaWidget37'
    | 'CtaWidget38'
    | 'TableCarrierCostAndRating'
    | 'TableLiabilityCostByState'
    | 'CostByAgeByGenderCardList'
    | 'Table16To19YearsOldCostOfCarrier'
    | 'Table20To25YearsOldCostOfCarrier'
    | 'Table60PlusYearsOldCostOfCarrier'
    | 'TableCostByDuiOfCarrier'
    | 'TableCostBySpeedingOfCarrier'
    | 'CtfCarCards'
    | 'TableAvgCostByState'
    | 'TableAvgAnnualBasicCostByState'
    | 'TableFullCoverageCompareAmongCompanies'
    | 'TableBasicCoverageCompareAmongCompanies'
    | 'Random4CarRepairShopCards'
    | 'CarrierRatingSummary'
    | 'CarrierVsCarrierRatingSummary'
    | 'ResourceLinkList'
    | 'ResourceLinkListV2'
    | 'DataLockCard';
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface EditorialNoteBlock {
  note: PayloadRichText;
  styleCustomized?: boolean;
  responsive?: boolean;
  sectionStyle?: SectionStyle;
  sectionStyles?: ResponsiveSectionStyles;
  id?: string;
  blockName?: string;
  blockType: 'editorial-note-block';
}
export interface ExpertQuoteBoxBlock {
  title?: PayloadRichText;
  expert?: string | Author;
  expertSubtitle?: PayloadRichText;
  quote?: PayloadRichText;
  styleCustomized?: boolean;
  responsive?: boolean;
  sectionStyle?: SectionStyle;
  sectionStyles?: ResponsiveSectionStyles;
  id?: string;
  blockName?: string;
  blockType: 'expert-quote-box-block';
}
export interface DividerBlock {
  styleCustomized?: boolean;
  responsive?: boolean;
  sectionStyle?: SectionStyle;
  sectionStyles?: ResponsiveSectionStyles;
  id?: string;
  blockName?: string;
  blockType: 'divider-block';
}
export interface CostRatingFactorSummaryBlock {
  title?: PayloadRichText;
  points?: CostRatingFactorSummaryBlockPoints;
  bottomDesc?: PayloadRichText;
  styleCustomized?: boolean;
  responsive?: boolean;
  sectionStyle?: SectionStyle;
  sectionStyles?: ResponsiveSectionStyles;
  id?: string;
  blockName?: string;
  blockType: 'cost-rating-factor-summary-block';
}
export interface AuthorListBlock {
  title?: PayloadRichText;
  authors?: string[] | Author[];
  footer?: PayloadRichText;
  styleCustomized?: boolean;
  responsive?: boolean;
  sectionStyle?: SectionStyle;
  sectionStyles?: ResponsiveSectionStyles;
  id?: string;
  blockName?: string;
  blockType: 'author-list-block';
}
export interface UserCommentCtaBlock {
  userComment?: string | UserComment;
  userComments: string[] | UserComment[];
  ctaButtonText?: PayloadRichText;
  ctaButtonHref?: string;
  styleCustomized?: boolean;
  responsive?: boolean;
  sectionStyle?: SectionStyle;
  sectionStyles?: ResponsiveSectionStyles;
  id?: string;
  blockName?: string;
  blockType: 'user-comment-cta-block';
}
export interface WhyTrustJerryBlock {
  title?: PayloadRichText;
  content?: PayloadRichText;
  backgroundColor?: string;
  styleCustomized?: boolean;
  responsive?: boolean;
  sectionStyle?: SectionStyle;
  sectionStyles?: ResponsiveSectionStyles;
  id?: string;
  blockName?: string;
  blockType: 'why-trust-jerry-block';
}
export interface ProsAndConsCardsBlock {
  pros: {
    title?: string;
    rows?: {
      content?: PayloadRichText;
      id?: string;
    }[];
    icon?: string | Media;
    backgroundColor?: string;
  };
  cons: {
    title?: string;
    rows?: {
      content?: PayloadRichText;
      id?: string;
    }[];
    icon?: string | Media;
    backgroundColor?: string;
  };
  styleCustomized?: boolean;
  responsive?: boolean;
  sectionStyle?: SectionStyle;
  sectionStyles?: ResponsiveSectionStyles;
  id?: string;
  blockName?: string;
  blockType: 'pros-and-cons-cards-block';
}
export interface ProAndConBlock {
  pro: {
    title?: string;
    content?: PayloadRichText;
    icon?: string | Media;
    iconSize?: number;
  };
  con: {
    title?: string;
    content?: PayloadRichText;
    icon?: string | Media;
    iconSize?: number;
  };
  styleCustomized?: boolean;
  responsive?: boolean;
  sectionStyle?: SectionStyle;
  sectionStyles?: ResponsiveSectionStyles;
  id?: string;
  blockName?: string;
  blockType: 'pro-and-con-block';
}
export interface ListWithIconBlock {
  items?: {
    label?: PayloadRichText;
    icon?: string | Media;
    id?: string;
  }[];
  styleCustomized?: boolean;
  responsive?: boolean;
  sectionStyle?: SectionStyle;
  sectionStyles?: ResponsiveSectionStyles;
  id?: string;
  blockName?: string;
  blockType: 'list-with-icon-block';
}
export interface TableOfContentsBlock {
  title?: PayloadRichText;
  styleCustomized?: boolean;
  responsive?: boolean;
  sectionStyle?: SectionStyle;
  sectionStyles?: ResponsiveSectionStyles;
  id?: string;
  blockName?: string;
  blockType: 'table-of-contents-block';
}
export interface JumpToElementBlock {
  label?: string;
  items?: {
    content?: PayloadRichText;
    link?: string;
    id?: string;
  }[];
  jumpToElementBlockVariant: 'button' | 'button2' | 'button3' | 'list';
  icon?: string | Media;
  styleCustomized?: boolean;
  responsive?: boolean;
  sectionStyle?: SectionStyle;
  sectionStyles?: ResponsiveSectionStyles;
  id?: string;
  blockName?: string;
  blockType: 'jump-to-element-block';
}
export interface CarrierReviewCardListBlock {
  title?: PayloadRichText;
  description?: PayloadRichText;
  carrierReviews?: string[] | CarrierReview[];
  styleCustomized?: boolean;
  responsive?: boolean;
  sectionStyle?: SectionStyle;
  sectionStyles?: ResponsiveSectionStyles;
  id?: string;
  blockName?: string;
  blockType: 'carrier-review-card-list-block';
}
export interface CarrierReview {
  id: string;
  name: string;
  carrier: string | Carrier;
  content?: string;
  stars: number;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface CarrierReviewListBlock {
  title?: PayloadRichText;
  description?: PayloadRichText;
  reviewListVariant?: 'default' | 'basic' | 'cost' | 'price' | 'claims' | 'customerService' | 'all';
  showFilter?: boolean;
  styleCustomized?: boolean;
  responsive?: boolean;
  sectionStyle?: SectionStyle;
  sectionStyles?: ResponsiveSectionStyles;
  id?: string;
  blockName?: string;
  blockType: 'carrier-review-list-block';
}
export interface CarrierVsCarrierRatingBlock {
  title?: PayloadRichText;
  description?: PayloadRichText;
  styleCustomized?: boolean;
  responsive?: boolean;
  sectionStyle?: SectionStyle;
  sectionStyles?: ResponsiveSectionStyles;
  id?: string;
  blockName?: string;
  blockType: 'carrier-vs-carrier-rating-block';
}
export interface FaqList {
  id: string;
  name: string;
  list: string[] | Faq[];
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface Tag {
  id: string;
  name: string;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface ResponsiveContainerWidth {
  xs?: '100' | '90' | '80' | '66.7';
  lg?: '100' | '90' | '80' | '66.7';
  xl?: '100' | '90' | '80' | '66.7';
}
export interface HeroCtaProps {
  showTitle?: boolean;
  showSubtitle?: boolean;
  showSlogan?: boolean;
  showCtaButton?: boolean;
  whiteCtaButton?: boolean;
  title?: string;
  subtitle?: string;
  slogan?: string;
  ctaText?: string;
  contentAlign?: 'center' | 'left' | 'sides';
  heroImagePosition?: 'background' | 'below';
  sloganTextPosition?: 'underButton' | 'underSubtitle';
  heroButtonBorderRadius?: 'pill' | 'semiRounded' | 'none';
  showTrustedByMillionsOfUsers?: boolean;
  noMargin?: boolean;
}
export interface Seo {
  id: string;
  name: string;
  title?: PayloadRichText;
  description?: PayloadRichText;
  canonicalUrl?: string;
  no_index?: boolean;
  no_follow?: boolean;
  seoPageSchema?: string | SeoPageSchema;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface SeoPageSchema {
  id: string;
  type: string;
  jsonSchema:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  schema?: string;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface AgeDetailPage {
  id: string;
  slug: string;
  title?: PayloadRichText;
  seo: string | Seo;
  content: (
    | HeroCtaBlock
    | LogoListBlock
    | AuthorInfoLineBlock
    | AppScreenshotBlock
    | RichTextBlock
    | UserCommentListBlock
    | CardListBlock
    | CostRatingFactorTocBlock
    | VideoBlock
    | FaqListBlock
    | DynamicComponentBlock
    | StaticComponentBlock
    | EditorialNoteBlock
    | ExpertQuoteBoxBlock
    | DividerBlock
    | CostRatingFactorSummaryBlock
    | AuthorListBlock
    | UserCommentCtaBlock
    | WhyTrustJerryBlock
    | ProsAndConsCardsBlock
    | ProAndConBlock
    | ListWithIconBlock
    | TableOfContentsBlock
    | JumpToElementBlock
    | CarrierReviewCardListBlock
    | CarrierReviewListBlock
    | CarrierVsCarrierRatingBlock
  )[];
  author?: string | Author;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
  _status?: 'draft' | 'published';
}
export interface LandingTopicPage {
  id: string;
  category: string | Category;
  article: string | Article;
  heroTitle?: PayloadRichText;
  slug: string;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
  _status?: 'draft' | 'published';
}
export interface SeoResourceTemplatePage {
  id: string;
  name: string;
  category: string | Category;
  isTemplate?: boolean;
  isDefaultTemplate?: boolean;
  type?: 'state' | 'city' | 'carMake' | 'carModel' | 'carModelTrim' | 'carModelYear' | 'carrier' | 'carrierVsCarrier';
  template?: string | SeoResourceTemplatePage;
  state?: string | State;
  city?: string | City;
  carMake?: string | CarMake;
  carModel?: string | CarModel;
  carModelTrim?: string | CarModelTrim;
  carModelYear?: string | CarModelYear;
  carrier?: string | Carrier;
  carrier1?: string | Carrier;
  carrier2?: string | Carrier;
  title?: PayloadRichText;
  description?: PayloadRichText;
  cover?: string | Media;
  author?: string | Author;
  editor?: string | Author;
  reviewer?: string | Author;
  layout?: PageLayout;
  seo?: string | Seo;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
  _status?: 'draft' | 'published';
}
export interface CarModelTrim {
  id: string;
  slug: string;
  carMake: string | CarMake;
  carModel: string | CarModel;
  trim: string;
  name: string;
  fullName?: string;
  legacyCarModelName?: string;
  legacyCarModelSlug?: string;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface CarModelYear {
  id: string;
  slug: string;
  carMake: string | CarMake;
  carModel: string | CarModel;
  year: number;
  name?: string;
  fullName?: string;
  hasInsuranceData?: boolean;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface PageLayout {
  blocks?: (
    | HeroCtaBlock
    | LogoListBlock
    | AuthorInfoLineBlock
    | AppScreenshotBlock
    | RichTextBlock
    | UserCommentListBlock
    | CardListBlock
    | CostRatingFactorTocBlock
    | VideoBlock
    | FaqListBlock
    | DynamicComponentBlock
    | StaticComponentBlock
    | EditorialNoteBlock
    | ExpertQuoteBoxBlock
    | DividerBlock
    | CostRatingFactorSummaryBlock
    | AuthorListBlock
    | UserCommentCtaBlock
    | WhyTrustJerryBlock
    | ProsAndConsCardsBlock
    | ProAndConBlock
    | ListWithIconBlock
    | TableOfContentsBlock
    | JumpToElementBlock
    | CarrierReviewCardListBlock
    | CarrierReviewListBlock
    | CarrierVsCarrierRatingBlock
  )[];
}
export interface CarRepairServiceTemplatePage {
  id: string;
  name: string;
  category: string | Category;
  isTemplate?: boolean;
  isDefaultTemplate?: boolean;
  type?: 'carRepairService' | 'carMake' | 'carModel' | 'carModelTrim';
  carRepairService?: string | CarRepairService;
  carMake?: string | CarMake;
  carModel?: string | CarModel;
  carModelTrim?: string | CarModelTrim;
  template?: string | CarRepairServiceTemplatePage;
  title?: PayloadRichText;
  description?: PayloadRichText;
  cover?: string | Media;
  author?: string | Author;
  editor?: string | Author;
  reviewer?: string | Author;
  layout?: PageLayout;
  seo?: string | Seo;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
  _status?: 'draft' | 'published';
}
export interface CarrierTemplatePage {
  id: string;
  name: string;
  isTemplate?: boolean;
  isDefaultTemplate?: boolean;
  type?: 'carrierPage';
  carrier?: string | Carrier;
  template?: string | CarrierTemplatePage;
  title?: PayloadRichText;
  description?: PayloadRichText;
  cover?: string | Media;
  author?: string | Author;
  editor?: string | Author;
  reviewer?: string | Author;
  layout?: PageLayout;
  seo?: string | Seo;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
  _status?: 'draft' | 'published';
}
export interface NewsReport {
  id: string;
  slug: string;
  title: string;
  type: 'external' | 'internal';
  internalNewsArticle?: string | Article;
  externalLink?: string;
  publishedAt: string;
  cover?: string | Media;
  description?: string;
  author?: string | Author;
  isScheduledPublish?: boolean;
  publishDate: string;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
  _status?: 'draft' | 'published';
}
export interface CarRepairServiceDetailPage {
  id: string;
  slug: string;
  title: string;
  carRepairService: string | CarRepairService;
  author: string | Author;
  introduction?: PayloadRichText;
  description?: PayloadRichText;
  popularServices?: string[] | CarRepairServiceDetailPage[];
  seo?: string | Seo;
  faqList?: string | FaqList;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface CarRepairServiceCityPage {
  id: string;
  slug: string;
  title: PayloadRichText;
  carRepairService: string | CarRepairService;
  city: string | City;
  introduction?: PayloadRichText;
  description?: PayloadRichText;
  content?: PayloadRichText;
  author: string | Author;
  seo?: string | Seo;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface TeamMember {
  id: string;
  name: string;
  title?: string;
  bio: string;
  avatar: string | Media;
  linkedInUrl?: string;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface Qna {
  id: string;
  slug: string;
  title: string;
  details?: string;
  answer?: PayloadRichText;
  assignedTo?: string | Author;
  askedBy?: string | Author;
  answeredBy?: string | Author;
  relatedArticles?:
    | {
        value: string;
        relationTo: 'articles';
      }[]
    | {
        value: Article;
        relationTo: 'articles';
      }[];
  category?: string | Category;
  tags?: string[] | Tag[];
  isLive?: boolean;
  isAnswered?: boolean;
  answeredAt?: string;
  upVote?: number;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  meta?: {
    title?: string;
    description?: string;
    image?: string | Media;
    noIndex?: boolean;
  };
  updatedAt: string;
  createdAt: string;
}
export interface Button {
  id: string;
  type?: 'primary' | 'secondary' | 'subtle' | 'text';
  content?: PayloadRichText;
  href?: string;
  radius?: 'pill' | 'semiRounded';
  size?: 'huge' | 'large' | 'medium' | 'small';
  align?: 'left' | 'center' | 'right';
  fullWidth?: boolean;
  textVariant?:
    | 'h1'
    | 'h2'
    | 'h3'
    | 'h4'
    | 'h5'
    | 'h6'
    | 'body1'
    | 'body2'
    | 'body3'
    | 'subtitle1'
    | 'subtitle2'
    | 'lead1'
    | 'lead2'
    | 'lead3'
    | 'link_lg'
    | 'link_md'
    | 'link_sm'
    | 'link_xs'
    | 'capitalised';
  openInNewTab?: boolean;
  clickEvents?: string[] | GlobalEvent[];
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface HighlightSection {
  id: string;
  variant?: 'primary' | 'secondary' | 'linkList' | 'icon';
  highlightButton?: string;
  icon?: string | Media;
  title?: PayloadRichText;
  content?: PayloadRichText;
  ctaButton?: PayloadRichText;
  ctaButtonHref?: string;
  notes?: PayloadRichText;
  highlightButtonVariant?: 'primary' | 'secondary';
  titleVariant?:
    | 'h1'
    | 'h2'
    | 'h3'
    | 'h4'
    | 'h5'
    | 'h6'
    | 'body1'
    | 'body2'
    | 'body3'
    | 'subtitle1'
    | 'subtitle2'
    | 'lead1'
    | 'lead2'
    | 'lead3'
    | 'link_lg'
    | 'link_md'
    | 'link_sm'
    | 'link_xs'
    | 'capitalised';
  titleColor?: string;
  ctaButtonVariant?: 'primary' | 'secondary' | 'subtle' | 'text';
  ctaButtonAlign?: 'left' | 'center' | 'right';
  ctaButtonOpenLinkInNewTab?: boolean;
  notesVariant?:
    | 'h1'
    | 'h2'
    | 'h3'
    | 'h4'
    | 'h5'
    | 'h6'
    | 'body1'
    | 'body2'
    | 'body3'
    | 'subtitle1'
    | 'subtitle2'
    | 'lead1'
    | 'lead2'
    | 'lead3'
    | 'link_lg'
    | 'link_md'
    | 'link_sm'
    | 'link_xs'
    | 'capitalised';
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface Link {
  id: string;
  text: string;
  url: string;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface TopNavigation {
  id: string;
  name: string;
  menus?: {
    label?: string;
    link?: string;
    displayType?: 'horizontal' | 'vertical';
    submenu?: {
      label?: string;
      submenu?: {
        label?: string;
        submenu?: {
          label?: string;
          link?: string;
          showArrowRightIcon?: boolean;
          id?: string;
        }[];
        id?: string;
      }[];
      id?: string;
    }[];
    id?: string;
  }[];
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface ContextField {
  id: string;
  name?: string;
  fieldName?: string;
  displayType?: 'inline' | 'block' | 'link';
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface DynamicText {
  id: string;
  name: string;
  description?: string;
  dataType: 'AfterJerryPremium';
  filters?: DynamicTextFilters;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface DynamicTable {
  id: string;
  name: string;
  description?: string;
  variant?: 'commonTable' | 'compareTable';
  dimensions?: DynamicTableDimensions;
  dataLabelHead?: string;
  dataLabels?: DynamicTableDataLabels;
  measures?: DynamicTableMeasures;
  filters?: DynamicTableFilters;
  order?: DynamicTableOrders;
  rowsCount?: number;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface MeasureByVariant {
  commonTable:
    | 'count'
    | 'averagePreJerryPremium'
    | 'averageAfterJerryPremium'
    | 'averagePreJerryAnnualPremium'
    | 'averageAfterJerryAnnualPremium'
    | 'averageAnnualSaving';
  compareTable:
    | 'allCoverageBeforeJerry'
    | 'allCoverageAfterJerry'
    | 'annualSavings'
    | 'minimumCoverageBeforeJerry'
    | 'minimumCoverageAfterJerry'
    | 'fullCoverageBeforeJerry'
    | 'fullCoverageAfterJerry';
}
export interface OrderByVariant {
  commonTable?:
    | 'age'
    | 'ageGroups'
    | 'state'
    | 'city'
    | 'zip'
    | 'carrier'
    | 'carMake'
    | 'carModel'
    | 'carYear'
    | 'gender'
    | 'infractionType'
    | 'coverageType'
    | 'count'
    | 'averagePreJerryPremium'
    | 'averageAfterJerryPremium'
    | 'averagePreJerryAnnualPremium'
    | 'averageAfterJerryAnnualPremium'
    | 'averageAnnualSaving';
  compareTable?:
    | 'age'
    | 'ageGroups'
    | 'state'
    | 'city'
    | 'zip'
    | 'carrier'
    | 'carMake'
    | 'carModel'
    | 'carYear'
    | 'gender'
    | 'infractionType'
    | 'coverageType'
    | 'allCoverageBeforeJerry'
    | 'allCoverageAfterJerry'
    | 'annualSavings'
    | 'minimumCoverageBeforeJerry'
    | 'minimumCoverageAfterJerry'
    | 'fullCoverageBeforeJerry'
    | 'fullCoverageAfterJerry';
}
export interface DynamicRealQuotesTable {
  id: string;
  name: string;
  description?: string;
  dataVariant?: 'commonTable' | 'stackTable';
  displayVariant?: 'table' | 'cardList' | 'tableList';
  tableListFilter?: DynamicRealQuotesTableListFilter;
  tableDisplayRichText?: PayloadRichText;
  contentBelowTable?: PayloadRichText;
  highlightFields?: DynamicRealQuotesTableHighlightFields;
  displayColumns?: DynamicRealQuotesTableDisplayColumns;
  filterGroup?: DynamicRealQuotesTableFilterGroups;
  filter?: DynamicRealQuotesTableFilter;
  locationField?: 'stateAndCity' | 'stateAndCityAndZip';
  tableHiddenConditions?: {
    conditionField:
      | 'minimumTableItemsCount'
      | 'missingPoorCreditsDataItems'
      | 'missingOldCarsDataItems'
      | 'missingNewCarsDataItems'
      | 'missingDUIsDataItems'
      | 'missingOldDriversDataItems'
      | 'missingNewDriversDataItems';
    minimumTableItemsCount?: number;
    missingPoorCreditsDataItems?: boolean;
    missingOldCarsDataItems?: boolean;
    missingNewCarsDataItems?: boolean;
    missingDUIsDataItems?: boolean;
    missingOldDriversDataItems?: boolean;
    missingNewDriversDataItems?: boolean;
    id?: string;
  }[];
  rowsCount?: number;
  preferConditions?: DynamicRealQuotesTablePreferConditions;
  followFamousCarrierRule?: boolean;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface CarrierReviewsTable {
  id: string;
  name: string;
  description?: string;
  displayColumns?: CarrierReviewsTableDisplayColumns;
  filter?: CarrierReviewsTableFilter;
  rowsCount?: number;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface AverageInsuranceTable {
  id: string;
  name: string;
  description?: string;
  tableDisplayRichText?: PayloadRichText;
  dataSourceType?:
    | 'stateAverageInsuranceComparison'
    | 'cityAverageInsuranceComparison'
    | 'stateAverageInsuranceRatings'
    | 'cityZipAverageInsuranceRateComparison'
    | 'makeBaseModelAverageInsuranceComparison'
    | 'makeAverageInsuranceComparison'
    | 'modelAverageInsuranceComparison'
    | 'makeCheapestAverageInsuranceComparison'
    | 'makeMostExpensiveAverageInsuranceComparison'
    | 'modelMiniAverageInsuranceComparison'
    | 'modelTrimAverageInsuranceComparison'
    | 'modelAverageInsuranceIIHSRating'
    | 'modelAverageInsuranceNHTSARating'
    | 'modelAverageInsuranceSafetyFeatures'
    | 'modelPriceGroupAverageInsuranceComparison'
    | 'yearGroupMakeModelAverageInsuranceComparison'
    | 'yearMakeModelAverageInsuranceComparison'
    | 'yearMakeModelAverageInsuranceIIHSRating'
    | 'yearMakeModelAverageInsuranceNHTSARating'
    | 'yearMakeModelTrimAverageInsuranceComparison'
    | 'yearPriceGroupMakeModelAverageInsuranceComparison'
    | 'trimMakeModelAverageInsurance'
    | 'trimMakeModelAverageInsuranceTrimComparison'
    | 'trimMakeModelAverageInsuranceModelComparison'
    | 'trimMakeModelAverageInsuranceIIHSRating'
    | 'carrierReviewSummaryRating'
    | 'carrierReviewCostMiniRating'
    | 'carrierVsCarrierReviewCostMiniRating'
    | 'carrierReviewClaimsMiniRating'
    | 'carrierReviewCustomerServiceMiniRating'
    | 'carrierReviewAverageInsuranceStateCost'
    | 'carrierVsCarrierReviewClaimsMiniRating'
    | 'carrierVsCarrierReviewCustomerServiceMiniRating'
    | 'carrierVsCarrierReviewAverageInsuranceStateCost';
  baseModel?: string | CarModel;
  displayColumns?: TableDisplayColumns;
  filter?: AverageInsuranceTableDynamicFilter;
  tableHiddenConditions?: {
    conditionField: 'minimumTableItemsCount';
    minimumTableItemsCount?: number;
    id?: string;
  }[];
  rowsCount?: number;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface CarRepairQuoteCostTable {
  id: string;
  name: string;
  description?: string;
  tableDisplayRichText?: PayloadRichText;
  displayColumns?: TableDisplayColumns;
  filter?: CarRepairQuoteCostTableDynamicFilter;
  tableHiddenConditions?: {
    conditionField: 'notContainsAvailablePartsCost';
    notContainsAvailablePartsCost?: boolean;
    id?: string;
  }[];
  rowsCount?: number;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface UsedCarDetailCard {
  id: string;
  title: string;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface UsedCarGeneratedDescriptionCard {
  id: string;
  title: string;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface TwitterWidget {
  id: string;
  name: string;
  type: 'Tweet' | 'Share' | 'Follow' | 'Hashtag' | 'Mention';
  tweetId?: string;
  url?: string;
  username?: string;
  hashtag?: string;
  options?: string;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface ScheduledPublishTask {
  id: string;
  type: 'collection' | 'global';
  collectionSlug?: string;
  documentSlug?: string;
  globalSlug?: string;
  status: string;
  publishDate: string;
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface Redirect {
  id: string;
  from: string;
  to: {
    type?: 'reference' | 'custom';
    reference:
      | {
          value: string | Article;
          relationTo: 'articles';
        }
      | {
          value: string | CarRepairServiceDetailPage;
          relationTo: 'car-repair-service-detail-pages';
        }
      | {
          value: string | Qna;
          relationTo: 'qnas';
        };
    url: string;
  };
  migratedFrom?: string;
  migratedFromContentful?: boolean;
  updatedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface NewsroomLandingPage {
  id: string;
  topNewsReports: string[] | NewsReport[];
  seo?: string | Seo;
  isScheduledPublish?: boolean;
  publishDate: string;
  _status?: 'draft' | 'published';
  updatedAt?: string;
  createdAt?: string;
}
export interface DataAndStudiesPage {
  id: string;
  topArticles: string[] | Article[];
  seo?: string | Seo;
  updatedAt?: string;
  createdAt?: string;
}
export interface CarRepairServiceCityTemplate {
  id: string;
  title: PayloadRichText;
  content: PayloadRichText;
  seo?: string | Seo;
  updatedAt?: string;
  createdAt?: string;
}
export interface AdviceLandingPage {
  id: string;
  categorySections?: CategorySections;
  questionsSection?: QuestionSection;
  updatedAt?: string;
  createdAt?: string;
}
export interface QuestionSection {
  name?: string;
  description?: string;
  icon?: string | Media;
  articles?: QuestionSectionRawArticles;
}
export interface AutoRefiLandingPage {
  id: string;
  content?: PayloadRichText;
  faqs?: string[] | Faq[];
  relatedArticles?: string[] | Article[];
  disclaimer?: PayloadRichText;
  seo: string | Seo;
  updatedAt?: string;
  createdAt?: string;
}
export interface LenderLandingPage {
  id: string;
  seo?: string | Seo;
  updatedAt?: string;
  createdAt?: string;
}
export interface EditorialStandardsPage {
  id: string;
  title: string;
  whoAreWe?: PayloadRichText;
  keyPrinciples?: EditorialStandardsPagesKeyPrinciples;
  citers?: EditorialStandardsPagesCiters;
  featuredWriters: string[] | Author[];
  featuredEditors: string[] | Author[];
  contactUs?: PayloadRichText;
  howWeMakeMoney?: PayloadRichText;
  seo?: string | Seo;
  updatedAt?: string;
  createdAt?: string;
}
export interface GarageGuardPage {
  id: string;
  layout: (
    | HeroCtaBlock
    | LogoListBlock
    | AuthorInfoLineBlock
    | AppScreenshotBlock
    | RichTextBlock
    | UserCommentListBlock
    | CardListBlock
    | CostRatingFactorTocBlock
    | VideoBlock
    | FaqListBlock
    | DynamicComponentBlock
    | StaticComponentBlock
    | EditorialNoteBlock
    | ExpertQuoteBoxBlock
    | DividerBlock
    | CostRatingFactorSummaryBlock
    | AuthorListBlock
    | UserCommentCtaBlock
    | WhyTrustJerryBlock
    | ProsAndConsCardsBlock
    | ProAndConBlock
    | ListWithIconBlock
    | TableOfContentsBlock
    | JumpToElementBlock
    | CarrierReviewCardListBlock
    | CarrierReviewListBlock
    | CarrierVsCarrierRatingBlock
  )[];
  seo?: string | Seo;
  updatedAt?: string;
  createdAt?: string;
}
export interface HomePage {
  id: string;
  ctaTitle?: PayloadRichText;
  ctaSubtitle?: PayloadRichText;
  ctaButtons?: {
    label: string;
    service: 'insurance' | 'refi' | 'dwep' | 'garage';
    href: string;
    variant: 'primary' | 'secondary';
    icon: string | Media;
    id?: string;
  }[];
  layout: (
    | HeroCtaBlock
    | LogoListBlock
    | AuthorInfoLineBlock
    | AppScreenshotBlock
    | RichTextBlock
    | UserCommentListBlock
    | CardListBlock
    | CostRatingFactorTocBlock
    | VideoBlock
    | FaqListBlock
    | DynamicComponentBlock
    | StaticComponentBlock
    | EditorialNoteBlock
    | ExpertQuoteBoxBlock
    | DividerBlock
    | CostRatingFactorSummaryBlock
    | AuthorListBlock
    | UserCommentCtaBlock
    | WhyTrustJerryBlock
    | ProsAndConsCardsBlock
    | ProAndConBlock
    | ListWithIconBlock
    | TableOfContentsBlock
    | JumpToElementBlock
    | CarrierReviewCardListBlock
    | CarrierReviewListBlock
    | CarrierVsCarrierRatingBlock
  )[];
  seo?: string | Seo;
  updatedAt?: string;
  createdAt?: string;
}
export interface ReviewersBoardPage {
  id: string;
  title: string;
  description?: PayloadRichText;
  featuredReviewers: string[] | Author[];
  seo?: string | Seo;
  updatedAt?: string;
  createdAt?: string;
}
export interface SafetyPage {
  id: string;
  layout: (
    | HeroCtaBlock
    | LogoListBlock
    | AuthorInfoLineBlock
    | AppScreenshotBlock
    | RichTextBlock
    | UserCommentListBlock
    | CardListBlock
    | CostRatingFactorTocBlock
    | VideoBlock
    | FaqListBlock
    | DynamicComponentBlock
    | StaticComponentBlock
    | EditorialNoteBlock
    | ExpertQuoteBoxBlock
    | DividerBlock
    | CostRatingFactorSummaryBlock
    | AuthorListBlock
    | UserCommentCtaBlock
    | WhyTrustJerryBlock
    | ProsAndConsCardsBlock
    | ProAndConBlock
    | ListWithIconBlock
    | TableOfContentsBlock
    | JumpToElementBlock
    | CarrierReviewCardListBlock
    | CarrierReviewListBlock
    | CarrierVsCarrierRatingBlock
  )[];
  seo?: string | Seo;
  updatedAt?: string;
  createdAt?: string;
}
export interface DrivingRewardsPage {
  id: string;
  layout: (
    | HeroCtaBlock
    | LogoListBlock
    | AuthorInfoLineBlock
    | AppScreenshotBlock
    | RichTextBlock
    | UserCommentListBlock
    | CardListBlock
    | CostRatingFactorTocBlock
    | VideoBlock
    | FaqListBlock
    | DynamicComponentBlock
    | StaticComponentBlock
    | EditorialNoteBlock
    | ExpertQuoteBoxBlock
    | DividerBlock
    | CostRatingFactorSummaryBlock
    | AuthorListBlock
    | UserCommentCtaBlock
    | WhyTrustJerryBlock
    | ProsAndConsCardsBlock
    | ProAndConBlock
    | ListWithIconBlock
    | TableOfContentsBlock
    | JumpToElementBlock
    | CarrierReviewCardListBlock
    | CarrierReviewListBlock
    | CarrierVsCarrierRatingBlock
  )[];
  seo?: string | Seo;
  updatedAt?: string;
  createdAt?: string;
}
export interface FaqPage {
  id: string;
  faqsSectionTitle?: string;
  faqsSectionDescription?: PayloadRichText;
  faqs: string[] | Faq[];
  seo: string | Seo;
  updatedAt?: string;
  createdAt?: string;
}
export interface TeamPage {
  id: string;
  teamIntroduction?: string;
  teamVideo?: string | Video;
  teamMembers?: string[] | TeamMember[];
  seo?: string | Seo;
  updatedAt?: string;
  createdAt?: string;
}
export interface PrivacyPolicyPage {
  id: string;
  layout: (
    | HeroCtaBlock
    | LogoListBlock
    | AuthorInfoLineBlock
    | AppScreenshotBlock
    | RichTextBlock
    | UserCommentListBlock
    | CardListBlock
    | CostRatingFactorTocBlock
    | VideoBlock
    | FaqListBlock
    | DynamicComponentBlock
    | StaticComponentBlock
    | EditorialNoteBlock
    | ExpertQuoteBoxBlock
    | DividerBlock
    | CostRatingFactorSummaryBlock
    | AuthorListBlock
    | UserCommentCtaBlock
    | WhyTrustJerryBlock
    | ProsAndConsCardsBlock
    | ProAndConBlock
    | ListWithIconBlock
    | TableOfContentsBlock
    | JumpToElementBlock
    | CarrierReviewCardListBlock
    | CarrierReviewListBlock
    | CarrierVsCarrierRatingBlock
  )[];
  seo?: string | Seo;
  updatedAt?: string;
  createdAt?: string;
}
export interface UsedCarTransaction {
  id: string;
  layout: (
    | HeroCtaBlock
    | LogoListBlock
    | AuthorInfoLineBlock
    | AppScreenshotBlock
    | RichTextBlock
    | UserCommentListBlock
    | CardListBlock
    | CostRatingFactorTocBlock
    | VideoBlock
    | FaqListBlock
    | DynamicComponentBlock
    | StaticComponentBlock
    | EditorialNoteBlock
    | ExpertQuoteBoxBlock
    | DividerBlock
    | CostRatingFactorSummaryBlock
    | AuthorListBlock
    | UserCommentCtaBlock
    | WhyTrustJerryBlock
    | ProsAndConsCardsBlock
    | ProAndConBlock
    | ListWithIconBlock
    | TableOfContentsBlock
    | JumpToElementBlock
    | CarrierReviewCardListBlock
    | CarrierReviewListBlock
    | CarrierVsCarrierRatingBlock
  )[];
  updatedAt?: string;
  createdAt?: string;
}
